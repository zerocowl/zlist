{"version":3,"sources":["serviceWorker.js","components/TodoListItem.js","components/TodoList.js","actions/index.js","actions/types.js","components/AddTodo.js","components/ui/GitHub.js","components/GitHubLink.js","components/App.js","components/Loading.js","reducers/todoReducer.js","reducers/oneTimeParametersReducer.js","reducers/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","withStyles","theme","completed","textDecorationLine","trash","marginRight","_ref","todo","onToggled","onRemoved","classes","react_default","a","createElement","ListItem_default","key","id","button","dense","onClick","Checkbox_default","checked","tabIndex","Typography_default","className","color","variant","title","ListItemSecondaryAction_default","IconButton_default","setTimeout","aria-label","Delete_default","mapReversed","arr","cb","map","_","index","length","createItem","components_TodoListItem","connect","toggleTodo","todoId","type","payload","removeTodo","root","backgroundColor","palette","background","paper","margin","List_default","t","renderTodoTextField","input","other","Object","objectWithoutProperties","TextField_default","assign","label","placeholder","autoComplete","styledAddTodo","container","display","flexWrap","textField","width","form","marginTop","marginBottom","marginLeft","_ref2","addTodo","handleSubmit","reset","onFormSubmit","formValues","bind","onSubmit","Field","name","component","reduxFormAddTodo","reduxForm","enableReinitialize","initialValues","onetimeParameters","uuid","date","Date","GitHub","props","SvgIcon_default","d","GitHubLink","Fragment","href","ui_GitHub","createMuiTheme","primary","blue","typography","useNextVariants","toolbar","mixins","flexGrow","grow","styles","CssBaseline_default","AppBar_default","position","Toolbar_default","components_GitHubLink","Grid_default","justify","item","xs","lg","xl","components_AddTodo","components_TodoList","Loading","INITIAL_STATE","queryString","parse","document","search","combineReducers","arguments","undefined","action","concat","toConsumableArray","filter","objectSpread","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","whitelist","store","createStore","persistReducer","reducers","ReactDOM","render","es","integration_react","loading","components_Loading","persistor","persistStore","components_App","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4b564f73.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nconst styles = theme => ({\r\n  completed: {\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  trash: {\r\n    marginRight: 10,\r\n  }\r\n});\r\n\r\nconst TodoListItem = ({todo, onToggled, onRemoved, classes}) => (\r\n  <ListItem key={todo.id} button dense onClick={onToggled}>\r\n    <Checkbox\r\n      checked={todo.completed}\r\n      tabIndex={-1}/>\r\n    <Typography\r\n      className={todo.completed ? classes.completed : null}\r\n      color={todo.completed ? \"textSecondary\" : \"inherit\"}\r\n      variant=\"subtitle1\">\r\n      {todo.title}\r\n    </Typography>\r\n    <ListItemSecondaryAction>\r\n      <IconButton onClick={() => setTimeout(onRemoved, 250)} className={classes.trash} aria-label=\"Delete\">\r\n        <DeleteIcon/>\r\n      </IconButton>\r\n    </ListItemSecondaryAction>\r\n  </ListItem>\r\n);\r\n\r\nexport default withStyles(styles)(TodoListItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport {removeTodo, toggleTodo} from '../actions';\r\nimport TodoListItem from './TodoListItem';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    margin: 10,\r\n  },\r\n});\r\n\r\nconst TodoList = ({todo, toggleTodo, removeTodo, classes}) => {\r\n  if (!todo.length) {\r\n    return null;\r\n  }\r\n  return (\r\n    <List className={classes.root}>\r\n      {mapReversed(todo, t => createItem(t, toggleTodo, removeTodo))}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst mapReversed = (arr, cb) => arr.map((_, index) => cb(arr[arr.length - 1 - index]));\r\n\r\nconst createItem = (todo, onToggled, onRemoved) => {\r\n  return <TodoListItem key={todo.id}\r\n                       todo={todo}\r\n                       onToggled={() => onToggled(todo.id)}\r\n                       onRemoved={() => onRemoved(todo.id)}/>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo\r\n});\r\n\r\nexport default connect(mapStateToProps,\r\n  {toggleTodo, removeTodo}\r\n)(withStyles(styles)(TodoList));\r\n","import uuid from 'uuid';\r\nimport {ADD_TODO, TOGGLE_TODO, REMOVE_TODO} from './types';\r\n\r\nexport const addTodo = todo => ({\r\n  type: ADD_TODO,\r\n  payload: {\r\n    id: uuid(),\r\n    date: new Date(),\r\n    title: todo,\r\n    completed: false\r\n  }\r\n});\r\n\r\nexport const toggleTodo = todoId => ({type: TOGGLE_TODO, payload: todoId});\r\n\r\nexport const removeTodo = todoId => ({type: REMOVE_TODO, payload: todoId});\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nimport {addTodo} from '../actions';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    width: '100%'\r\n  },\r\n  form: {\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n  },\r\n};\r\n\r\nconst renderTodoTextField = ({input, ...other}) => (\r\n  <TextField\r\n    id=\"outlined-with-placeholder\"\r\n    label=\"Adicione um item aqui...\"\r\n    placeholder=\"Item\"\r\n    margin=\"normal\"\r\n    variant=\"outlined\"\r\n    autoComplete=\"off\"\r\n    {...input}\r\n    {...other}/>\r\n);\r\n\r\nconst onSubmit = (addTodo, reset, formValues) => {\r\n  addTodo(formValues.todo);\r\n  reset();\r\n};\r\n\r\nconst AddTodo = ({addTodo, classes, handleSubmit, reset}) => {\r\n  const onFormSubmit = onSubmit.bind(null, addTodo, reset);\r\n  return (\r\n    <form className={classes.form} onSubmit={handleSubmit(onFormSubmit)}>\r\n      <Field name=\"todo\" className={classes.textField} component={renderTodoTextField}/>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst styledAddTodo = withStyles(styles)(AddTodo);\r\n\r\nconst reduxFormAddTodo = reduxForm({\r\n  form: 'addTodo',\r\n  enableReinitialize: true\r\n})(styledAddTodo);\r\n\r\nconst mapStateToPropsForm = state => ({\r\n  initialValues: {todo: state.onetimeParameters.todo}\r\n});\r\n\r\nexport default connect(mapStateToPropsForm, {addTodo})(reduxFormAddTodo);\r\n","import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nconst GitHub = props => (\r\n  <SvgIcon {...props}>\r\n    <path\r\n      d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\"/>\r\n  </SvgIcon>\r\n);\r\n\r\nexport default GitHub;","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport GitHub from \"./ui/GitHub\";\r\n\r\nconst GitHubLink = () => {\r\n  return (\r\n    <>\r\n      <IconButton href=\"https://github.com/zerocowl\" color=\"inherit\">\r\n        <GitHub/>\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GitHubLink;","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport TodoList from './TodoList';\r\nimport AddTodo from './AddTodo';\r\nimport GitHubLink from './GitHubLink';\r\n\r\nconst styles = (theme) => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  }\r\n});\r\n\r\nconst App = ({classes}) => (\r\n  <>\r\n    <div className={classes.root}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline/>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar variant=\"dense\">\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              ZList\r\n            </Typography>\r\n            <GitHubLink/>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.toolbar}/>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} lg={8} xl={6}>\r\n            <AddTodo/>\r\n            <TodoList/>\r\n          </Grid>\r\n        </Grid>\r\n      </MuiThemeProvider>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\r\n\r\nconst Loading = () => (<div>Loading...</div>);\r\n\r\nexport default Loading;","import {ADD_TODO, TOGGLE_TODO, REMOVE_TODO} from '../actions/types';\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case REMOVE_TODO:\r\n      return state.filter(t => t.id !== action.payload);\r\n    case TOGGLE_TODO:\r\n      return state.map((item) => {\r\n        if (item.id !== action.payload) {\r\n          return item\r\n        }\r\n        return {...item, completed: !item.completed}\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import queryString from 'query-string'\r\n\r\nimport {ADD_TODO} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {todo: queryString.parse(document.location.search).todo};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return {...state, todo: null};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nimport todoReducer from './todoReducer';\r\nimport oneTimeParametersReducer from './oneTimeParametersReducer';\r\n\r\nexport default combineReducers({\r\n  todo: todoReducer,\r\n  form: formReducer,\r\n  onetimeParameters: oneTimeParametersReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {compose, createStore} from 'redux';\r\nimport {PersistGate} from 'redux-persist/integration/react';\r\nimport {persistReducer, persistStore} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './components/App';\r\nimport Loading from './components/Loading';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['todo']\r\n};\r\n\r\nconst store = createStore(persistReducer(persistConfig, reducers), composeEnhancers());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={<Loading/>} persistor={persistStore(store)}>\r\n      <App/>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}